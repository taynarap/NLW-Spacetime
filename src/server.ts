import fastity from 'fastify'
import { PrismaClient } from '@prisma/client'
//CRIAR APP COM FRAMEWORK FASTITY. VARIAVEL CONSTANTE UTILIZANDO O FASTITY COMO UMA FUNCAO
const app = fastity()
const prisma = new PrismaClient()

//ROTA - QUANDO ALGUEM ACESSAR O ENDERECO /HELLO, QUERO QUE DEVOLVA "HELLO WORLD"
app.get('/users', async () => {
    const users = await prisma.user.findMany()
    return users
})

//CRIAR API - PARA CRIAR UMA API PRECISA DE TER UM SERVIDOR HTTP. SERVIDOR HTTP Ã‰ O ENDEREÃ‡O ONDE O FRONT-END FAZ REQUISIÃ‡Ã•ES HTTP (GET , POST, DELETE, PUT, PATCH...). AS REQUISIÃ‡Ã•ES VÃƒO PARA O SERVIDOR, QUE INTERPRETA ESSAS REQUISIÃ‡Ã•ES E DEVOLVE UMA RESPOSTA PARA ELAS.

//METODO LISTEN RECEBE UM OBJETO DE CONFIGURACOES E A CONFIGURACAO MAIS IMPORTANTE E OBRIGATORIA Ã‰ A PORTA QUE QUERO EXECUTAR ESSE SERVIDOR (3333. 

//O LISTEN DEVOLVE UMA PROMISE, ISSO SIGNIFICA QUE ALGO PODE DEMORAR PARA ACONTECER/EXECUTAR. EM TODAS AS "PROMISE" PODE-SE CONCATENAR UM METODO "THEN()", QUE PERMITE NOS OUVIRMOS QUANDO TERMINAR

app.listen({
    port: 3333,
}).then(() => {
    console.log('ðŸš€ HTTP server running on http://localhost:3333')
})

 